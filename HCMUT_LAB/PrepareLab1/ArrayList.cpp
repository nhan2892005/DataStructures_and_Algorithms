#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>
#include <climits>

bool consecutiveOnes(std::vector<int>& nums){
    //all the consecutive ones
    int count = 0;
    int num_ones = 0;
    for(int i = 0; i < nums.size(); i++){
        if(nums[i] == 1){
            count++;
            num_ones++;
        }else{
            count = 0;
        }
    }
    return count == num_ones;
}

int buyCar(int* nums, int length, int k){
    std::sort(nums, nums + length);
    int count = 0;
    for(int i = 0; i < length; i++){
        if(k >= nums[i]){
            k -= nums[i];
            count++;
        }
        else{
            break;
        }
    }
    return count;
}

/*
 Given an array of integers sorted in ascending order and an integer target.
 Your task is to implement a function with following prototype:
 int sumLessThanTarget(vector<int>& nums, int target);
 The function returns the largest sum of the pair of the numbers in nums whose sum is less than target.
 The testcases ensure that a solution exists
*/
int sumLessThanTarget(std::vector<int>& nums, int target){
    int left = 0;
    int right = nums.size() - 1;
    int max_sum = INT_MIN;

    while (left < right){
        int sum = nums[left] + nums[right];
        if (sum < target){
            max_sum = std::max(max_sum, sum);
            left++;
        }else{
            right--;
        }
    }

    return max_sum;
}

int minimumAmplitude(std::vector<int>& nums, int k) {
    int n = nums.size();
    if (n <= k) return 0;
    
    int minAmplitude = INT_MAX;

    for (int i = 0; i <= n - k; ++i) {
        int minValue = INT_MAX;
        int maxValue = INT_MIN;

        for (int j = 0; j < i; ++j) {
            minValue = std::min(minValue, nums[j]);
            maxValue = std::max(maxValue, nums[j]);
        }
        for (int j = i + k; j < n; ++j) {
            minValue = std::min(minValue, nums[j]);
            maxValue = std::max(maxValue, nums[j]);
        }

        minAmplitude = std::min(minAmplitude, maxValue - minValue);
    }

    return (minAmplitude != INT_MAX) ? minAmplitude : 0;
}


void test_buyCar() {
    int nums[] = {90, 30, 20, 40, 50};
    int k = 90;
    std::cout << "Test 1: " << (buyCar(nums, 5, k) == 3 ? "Passed" : "Failed") << std::endl;

    int nums2[] = {90, 30, 20, 40, 50};
    int k2 = 100;
    std::cout << "Test 2: " << (buyCar(nums2, 5, k2) == 3 ? "Passed" : "Failed") << std::endl;

    int nums3[] = {90, 30, 20, 40, 50};
    int k3 = 0;
    std::cout << "Test 3: " << (buyCar(nums3, 5, k3) == 0 ? "Passed" : "Failed") << std::endl;

    int nums4[] = {90, 30, 20, 40, 50};
    int k4 = 200;
    std::cout << "Test 4: " << (buyCar(nums4, 5, k4) == 4 ? "Passed" : "Failed") << std::endl;
}

void test_sumLessThanTarget() {
    std::vector<int> nums = {1, 2, 3, 4, 5};
    int target = 8;
    std::cout << "Test 1: " << (sumLessThanTarget(nums, target) == 7 ? "Passed" : "Failed") << std::endl;

    std::vector<int> nums2 = {1, 2, 3, 4, 5};
    int target2 = 10;
    std::cout << "Test 2: " << (sumLessThanTarget(nums2, target2) == 9 ? "Passed" : "Failed") << std::endl;

    std::vector<int> nums3 = {1, 2, 3, 4, 5};
    int target3 = 0;
    std::cout << "Test 3: " << (sumLessThanTarget(nums3, target3) == 0 ? "Passed" : "Failed") << std::endl;

    std::vector<int> nums4 = {1, 2, 3, 4, 5};
    int target4 = 100;
    std::cout << "Test 4: " << (sumLessThanTarget(nums4, target4) == 9 ? "Passed" : "Failed") << std::endl;
}


void test_minimumAmplitude() {
    std::vector<int> nums {9, 6, 2, 1, 10, 7}; 
    int k = 2; 
    std::cout << minimumAmplitude(nums, k) << std::endl;

    nums = {375, 8734, 7366, 433, 1063, 371, 412, 6424, 3680, 4100}; 
    k = 3; 
    std::cout << minimumAmplitude(nums, k) << std::endl;

    nums = {5344, 4704, 7723, 3528, 3427, 3530, 1754, 7454, 5405, 290, 4765, 6172, 1003, 5975, 1775, 1922, 5239, 2447, 5968, 2641}; 
    k = 7; 
    std::cout << minimumAmplitude(nums, k) << std::endl;

    nums = {8217, 8261, 3511, 7858, 5583, 560, 7904, 132, 3163, 7842, 1387, 4308, 
6635, 8734, 5147, 6452, 9752, 2512, 9103, 4873, 4691, 8334, 2757, 2061, 8017, 2942, 5114, 
3073, 3001, 8184, 52, 550, 8683, 4589, 5236, 5053, 2948, 7432, 5862, 9389, 7487, 4739, 
4123, 86, 4254, 2606, 1817, 6196, 1897, 652, 2529, 7078, 9910, 5150, 5282, 6559, 5321, 
2644, 9292, 6029, 110, 9440, 3607, 1896, 8629, 2574, 1701, 1037, 9837, 4674, 2485, 1628, 
1477, 5744, 1833, 3342, 2687, 7681, 6699, 6907, 949, 7572, 6811, 827, 4944, 6404, 2828, 
2683, 1527, 297, 8240, 9251, 4837, 9201, 6497, 7477, 8703, 1232, 2978, 7176, 4804, 9286, 
3269, 8551, 981}; 
    k = 37; 
    std::cout << minimumAmplitude(nums, k) << std::endl;

    nums = {1838, 5396, 1702, 2849, 3015, 8800, 7222, 9907, 1317, 47, 668, 9368, 76, 
7351, 7458, 3942, 9423, 7466, 119, 8547, 7514, 181, 7807, 9276, 6659, 9960, 6574, 508, 
6542, 598, 8406, 3612, 4512, 2687, 2940, 3078, 9590, 3597, 977, 1214, 6328, 6555, 896, 
1859, 6232, 1757, 6035, 6850, 5055, 524, 4603, 3564, 8282, 560, 5872, 2345, 4016, 995, 
8517, 1965, 3464, 4179, 1648, 1482, 1144, 1240, 985, 3878, 849, 8984, 1808, 6447, 4106, 
1751, 1316, 9468, 7177, 5827, 8434, 917, 8265, 8927, 6042, 6422, 7721, 6205, 6616, 240, 
5537, 4242, 8641, 2288, 795, 9973, 9628, 9940, 2239, 2200, 2292, 1307, 8510, 6922, 2027, 
5789, 3364, 4923, 2257, 3867, 3320, 8226, 4085, 6040, 6934, 9996, 4060, 2600, 8655, 3446, 
2016, 7992, 927, 7084, 9594, 3422, 895, 7395, 7826, 1810, 7515, 132, 7958, 7501, 8199, 
8106, 6042, 8048, 4798, 479, 1455, 2809, 3436, 3585, 6215, 738, 5388, 1707, 6760, 2586, 
1204, 1809, 5071, 6489, 3568, 8187, 6966, 3390, 3420, 1830, 7209, 6842, 5910, 3655, 6486, 
9602, 7299, 9202, 980, 7265, 2785, 5178, 4053, 1821, 3596, 6346, 9070, 3227, 4405, 4387, 
3046, 8485, 8320, 631, 9805, 4619, 4365, 2405, 5456, 5224, 6394, 5702, 2538, 1718, 2807, 
2040, 1021, 836, 1561, 1144, 4993, 1639, 915, 901, 2604, 4207, 8242, 1379, 2387, 8652, 
3976, 718, 3071, 176, 5787, 2447, 4036, 9895, 5135, 1412, 7166, 8036, 673, 1866, 4061, 45, 
5573, 9678, 7650, 3275, 5107, 3605, 26, 762, 4765, 4649, 5995, 4888, 4645, 2293, 2461, 
1852, 8845, 1266, 555, 8084, 526, 1299, 1065, 9524, 6908, 4765, 1609, 7019, 9946, 220, 
1353, 2360, 8026, 7778, 8798, 1229, 9352, 4993, 6279, 9459, 6360, 1307, 1595, 6559, 2909, 
2504, 9381, 9059, 9131, 1720, 9393, 5943, 1215, 9961, 759, 3178, 2702, 9915, 168, 2372, 
7963, 9394, 2246, 1662, 7661, 972, 4297, 5092, 8544, 2452, 511, 9481, 6939, 5350, 3107, 
9692, 5970, 8628, 5954, 1738, 8012, 120, 890, 803, 440, 9947, 8468, 1922, 1979, 3893, 9939, 
375, 6845, 3989, 7293, 9575, 9494, 9012, 9690, 5799, 2531, 1862, 2203, 1204, 1421, 9137, 
9948, 3607, 2364, 480, 8781, 9975, 4039, 2394, 3757, 256, 847, 7039, 6104, 3746, 3421, 
8850, 4356, 621, 8777, 109, 9142, 7420, 9453, 8466, 1322, 3135, 9529, 6142, 7394, 3005, 
9480, 4611, 5102, 8169, 691, 3222, 1021, 9093, 3284, 1285, 8579, 740, 2382, 221, 3836, 
9109, 2155, 7595, 4257, 3245, 4310, 5362, 8696, 1747, 5450, 6557, 4016, 9122, 9514, 8645, 
3149, 4651, 7235, 9909, 7264, 3785, 5151, 6908, 8555, 5801, 8267, 5730, 3348, 8169, 3355, 
5519, 88, 7088, 2525, 6985, 7890, 8927, 1291, 3324, 2348, 2199, 1845, 2862, 4469, 4634, 
6366, 6995, 7555, 70, 7254, 1679, 7003, 1408, 5544, 8635, 3823, 3741, 7956, 1482, 695, 71, 
448, 2155, 9843, 4765, 8091, 65, 3680, 1660, 5938, 1842, 281, 9181, 7750, 4845, 1248, 1087, 
4029, 7552, 1421, 1191, 1321, 8297, 2294, 836, 8966, 1467, 7520, 1784, 535, 9411, 3429, 
4516, 7636, 3627, 6342, 7843, 1629, 6702, 6386, 1515, 1762, 7501, 9240, 1727, 421, 2322, 
5866, 3208, 6512, 8180, 419, 3028, 3204, 9418, 2986, 9647, 881, 5507, 1367, 4658, 637, 
1045, 6229, 122}; 
    k = 227; 
    std::cout << minimumAmplitude(nums, k) << std::endl;

    nums = {9397, 1080, 1723, 2363, 4646, 6482, 804, 3411, 85, 8689, 8564, 4635, 
7461, 1706, 3501, 8957, 2710, 172, 1368, 351, 5356, 4638, 3193, 6818, 4061, 875, 2324, 
4876, 1962, 1184, 1584, 7896, 434, 9346, 1500, 8733, 6771, 6309, 8991, 2828, 6418, 1883, 
5348, 6078, 317, 6793, 3318, 1038, 2016, 2865, 7848, 2194, 1541, 9147, 8441, 3439, 9167, 
7045, 8901, 9085, 3928, 5021, 1375, 8617, 6441, 7452, 3662, 8395, 8299, 85, 2245, 327, 
2060, 8638, 7432, 5191, 3300, 6559, 9020, 3561, 4632, 6169, 9342, 1845, 5758, 5817, 7367, 
9170, 4370, 7436, 8206, 2777, 5528, 4645, 2510, 4729, 1396, 2733, 9929, 5453, 9575, 4970, 
1117, 6283, 1306, 8723, 4327, 8863, 9472, 3843, 5814, 4632, 8903, 7085, 4113, 7168, 911, 
1359, 8027, 6337, 7486, 633, 5445, 214, 6003, 6063, 6853, 7136, 2473, 781, 3414, 5995, 
6062, 9996, 1168, 1136, 7189, 1234, 2473, 7660, 5946, 8894, 9452, 7953, 9140, 5332, 121, 
9707, 5023, 2661, 6253, 4566, 6762, 7940, 8292, 3806, 1406, 5460, 1276, 2343, 8353, 982, 
4156, 2558, 1114, 8833, 1269, 9231, 1478, 754, 8007, 9672, 6025, 1063, 695, 5598, 1161, 
7191, 7791, 223, 4008, 8485, 6726, 6312, 256, 2756, 1346, 6247, 8452, 6428, 4268, 2452, 
9220, 6509, 1891, 1356, 7665, 8100, 3604, 9438, 7442, 1196, 1224, 3898, 2599, 2647, 4686, 
4165, 9516, 4429, 3402, 1458, 3360, 9460, 9134, 5166, 9222, 8433, 3368, 1147, 8971, 4430, 
6556, 6864, 3994, 3261, 3284, 6126, 6541, 747, 3669, 6230, 7092, 1960, 2116, 1321, 8138, 
7814, 8809, 8624, 4726, 5375, 1234, 9838, 3696, 6397, 2011, 6482, 3653, 420, 2813, 4097, 
7149, 5107, 4949, 3347, 3098, 3691, 1926, 4285, 915, 5438, 7505, 6911, 6707, 7933, 372, 
2143, 5772, 907, 6528, 9542, 1583, 9381, 6960, 1001, 3520, 278, 8903, 2283, 581, 6885, 
7833, 7137, 2288, 8738, 2333, 2502, 5694, 1282, 5569, 9695, 4622, 7175, 1695, 4386, 5766, 
3331, 1535, 243, 6514, 2606, 1852, 7551, 6383, 8518, 411, 2573, 6456, 1191, 2201, 3585, 
7470, 2556, 5205, 1523, 6045, 4708, 6606, 4991, 4140, 536, 4430, 8206, 5541, 3899, 1671, 
7157, 5254, 627, 4685, 1485, 8199, 4840, 7636, 6115, 8622, 4187, 9419, 5856, 5711, 9401, 
4842, 8076, 8823, 4879, 6936, 4959, 7963, 880, 1744, 9848, 3373, 1445, 5652, 2113, 4975, 
8197, 5106, 8258, 7659, 3317, 1990, 8181, 6546, 337, 8977, 4298, 2067, 8811, 441, 6908, 
2382, 4275, 7537, 7972, 2346, 633, 9194, 9901, 5476, 1455, 5033, 6167, 5993, 3330, 5003, 
5696, 9349, 4522, 1287, 1855, 1437, 3152, 3619, 7395, 5162, 7536, 9818, 3996, 6455, 303, 
4092, 2696, 5454, 3663, 9846, 3857, 2781, 4848, 5075, 9717, 62, 809, 1539, 5878, 8871, 
8231, 9020, 4146, 1904, 7509, 1742, 7718, 2083, 1213, 5595, 7103, 7241, 3982, 1879, 9937, 
8562, 7599, 1756, 4940, 724, 8978, 6337, 9147, 841, 812, 4604, 6991, 2162, 5189, 7941, 
9276, 3153, 7515, 7326, 7409, 6533, 9196, 2384, 7374, 8295, 5763, 1943, 4497, 3861, 2930, 
2960, 2450, 8364, 8962, 5138, 9040, 7419, 1815, 427, 7322, 3206, 8375, 268, 1827, 3496, 
3787, 392, 3952, 413, 5271, 7545, 1876, 2255, 727, 4132, 9022, 271, 9931, 845, 1521, 8454, 
1205, 1406, 1925, 4573, 2608, 6708, 9612, 4346, 3939, 6075, 7463, 827, 2870, 3180, 9705, 
6440, 4901, 3891, 3100, 2036, 4914, 8693, 5923, 7668, 3423, 5682, 8160, 6948, 6797, 9112, 
8264, 2342, 1343, 1640, 1587, 2940, 8850, 333, 6024, 2664, 8993, 5017, 1480, 8930, 660, 
6914, 857, 1258, 7000, 9518, 5511, 7070, 2581, 2251, 8838, 4798, 8780, 114, 347, 5998, 
8768, 4317, 5100, 9196, 7751, 326, 5797, 9650, 5184, 4034, 5788, 4190, 2487, 5070, 9655, 
401, 7430, 9208, 268, 7797, 431, 594, 2809, 7139, 8200, 8322, 4661, 2483, 4629, 9981, 2279, 
2132, 3740, 2662, 550, 5039, 9477, 2977, 673, 7927, 3969, 1069, 3936, 3092, 8413, 7361, 
6794, 5169, 6055, 262, 8296, 1026, 5712, 2054, 6682, 7066, 5490, 2243, 3881, 4684, 4515, 
6682, 5180, 496, 3403, 7274, 655, 9320, 5746, 1184, 9009, 4195, 286, 3317, 6412, 8658, 
1564, 3562, 6075, 4666, 1501, 1666, 5591, 3801, 8003, 9378, 7186, 7644, 9195, 740, 6200, 
6016, 1085, 4930, 4178, 7736, 466, 3745, 9597, 5535, 7654, 4315, 5355, 4686, 3006, 7890, 
6681, 2528, 2444, 3122, 9040, 6292, 6992, 7478, 943, 1330, 7105, 286, 1673, 6706, 9548, 
5775, 7771, 681, 4396, 9980, 1697, 7541, 3132, 1828, 9082, 7836, 3705, 9515, 2633, 3296, 
2026, 3293, 6349, 1461, 6196, 7104, 8995, 8950, 1241, 3146, 666, 1173, 226, 2419, 8631, 
8049, 573, 5164, 1195, 7997, 1912, 4864, 226, 4031, 8926, 8202, 4492, 5494, 9809, 2775, 
6594, 960, 2730, 7725, 1777, 7338, 2605, 1580, 3147, 7513, 2288, 3812, 4751, 4313, 9213, 
7352, 3845, 4212, 2853, 4722, 6590, 5174, 8504, 1462, 3387, 5598, 867, 3707, 3197, 135, 
3753, 631, 1357, 7351, 2597, 3546, 5774, 2696, 3326, 5935, 5999, 1125, 3660, 4318, 2405, 
3015, 3322, 1045, 8697, 2002, 6925, 1657, 4990, 9001, 916, 2199, 2101, 2137, 5761, 4415, 
3476, 5733, 6263, 164, 2804, 8109, 9059, 2813, 3130, 4116, 5728, 5632, 425, 434, 2678, 
3663, 9286, 8504, 6451, 4467, 7404, 1426, 2653, 105, 3873, 4161, 3302, 42, 5657, 6746, 
8672, 5023, 3897, 6921, 7171, 4533, 3486, 5914, 3342, 45, 2319, 1609, 3514, 1143, 6592, 
6520, 2149, 544, 5801, 6049, 7134, 201, 9783, 9533, 8156, 3898, 5473, 453, 7219, 1271, 
3405, 9559, 8457, 2690, 8404, 683, 3718, 1906, 483, 6645, 5995, 2850, 1028, 4766, 565, 
1788, 3036, 271, 1442, 5048, 502, 8813, 6851, 303, 2944, 3803, 2578, 1029, 8468, 28, 1638, 
9943, 7531, 3913, 9460, 1505, 1229, 6354, 552, 2067, 6475, 4920, 4757, 2373, 6160, 8298, 
8169, 4664, 1125, 5774, 3716, 2495, 2229, 7843, 651, 1214, 7905, 1524, 8856, 1954, 7988, 
5695, 1860, 8961, 8585, 7415, 2584, 2483, 4748, 1160, 9728, 7041, 9742, 2393, 9458, 5613, 
6605, 7574, 2253, 5714, 2291, 1390, 2084, 2365, 734, 3770, 4829, 1613, 208, 3184, 2646, 
8519, 1144, 7079, 4440, 1773, 1649, 6411, 2526, 8032, 8857, 4675, 7943, 7699, 8628, 6689, 
5418, 2034, 2162, 2010, 618, 3123, 6335, 8679, 1754, 5531, 4985, 5115, 6482, 1796, 999, 
8006, 8931, 2270, 5960, 1689, 9496, 2372, 5706, 5979, 1165, 8560, 7132, 1596, 3764, 8226, 
9846, 8632, 8982, 2492, 151, 7214, 4007, 3922, 351, 6241, 653, 864, 3166, 5518, 8418, 1532, 
9789, 2255, 952, 1678, 7980, 2160, 7324, 5293, 7035, 2705, 782, 332, 9597, 1739}; 
    k = 911; 
    std::cout << minimumAmplitude(nums, k) << std::endl;

    nums = {4450, 2935, 6136, 9907, 4057, 3782, 4944, 6686, 2192, 2934, 2659, 66, 
1475, 4756, 9112, 3062, 6171, 9682, 7097, 2464, 8933, 4300, 6211, 7338, 3235, 8540, 6457, 
7446, 1761, 4827, 414, 1248, 3722, 4473, 6019, 1859, 1980, 1696, 6909, 9279, 1882, 5444, 
3178, 298, 9297, 4077, 7158, 3332, 9757, 119, 6457, 5311, 2348, 7369, 2275, 1070, 9635, 
3302, 299, 1309, 5120, 1633, 9253, 3858, 6127, 9684, 6738, 2963, 3617, 1123, 1900, 3305, 
5738, 1308, 6690, 6227, 7707, 8145, 3120, 9533, 5439, 9514, 8738, 9841, 1513, 3556, 2347, 
2703, 7662, 9519, 5857, 9642, 7919, 1575, 4940, 8851, 8762, 1632, 1759, 6554, 7152, 168, 
7189, 9602, 3274, 8487, 3664, 1861, 9480, 9594, 2830, 663, 5035, 6145, 2381, 5087, 1988,
2677, 5169, 6964, 6860, 5054, 6035, 2996, 3925, 9844, 2860, 3802, 9857, 421, 2802, 2897, 
2754, 358, 226, 6788, 4065, 1981, 1135, 9832, 6611, 3407, 1225, 109, 7656, 8101, 2386, 
2544, 246, 6900, 4125, 9125, 6838, 6509, 3688, 1619, 3357, 6754, 268, 2368, 4941, 6586, 
2610, 1950, 4269, 39, 3096, 6790, 4983, 9990, 1621, 5237, 2001, 2455, 649, 1796, 8014, 
9438, 2008, 5101, 277, 9048, 2776, 538, 2802, 9218, 6537, 2687, 108, 4967, 1829, 3211, 
7911, 4936, 2184, 5068, 1994, 5441, 2530, 4849, 6804, 4986, 1434, 4563, 8843, 4731, 5317, 
1894, 885, 2947, 5527, 876, 9754, 8763, 3786, 7564, 25, 7254, 9485, 7537, 2827, 5036, 9614, 
3845, 7189, 9015, 4619, 6064, 3746, 7918, 9894, 3980, 7600, 8176, 7911, 9531, 1241, 579, 
2390, 954, 2181, 5694, 1017, 6615, 30, 6339, 9994, 2642, 9380, 8961, 6765, 9968, 3842, 
7097, 7568, 6790, 7873, 6639, 196, 2916, 5483, 6708, 9500, 3279, 8275, 6738, 6644, 483, 
9747, 5463, 3667, 1769, 2342, 709, 2035, 8758, 2743, 4425, 8881, 4292, 4570, 5883, 3632, 
5173, 233, 4709, 2579, 6180, 4049, 6056, 5755, 3295, 687, 635, 4765, 5154, 5333, 2118, 
9784, 229, 6897, 9966, 2821, 1514, 2944, 6993, 5936, 6207, 4911, 3557, 2566, 3275, 4898, 
3835, 831, 806, 2761, 5482, 3406, 8393, 6479, 2553, 1927, 9033, 980, 877, 9281, 2558, 8110, 
1733, 2203, 1273, 7212, 7025, 932, 6837, 2859, 3354, 3861, 9260, 1069, 3854, 578, 1965, 
2502, 7371, 8434, 8685, 5864, 446, 3450, 5885, 450, 156, 7601, 1658, 5508, 4801, 8511, 
6218, 1542, 7270, 871, 7509, 8890, 233, 6487, 466, 9328, 9032, 5213, 5140, 2200, 3325, 
2620, 517, 9581, 9777, 6464, 7554, 4272, 218, 750, 9958, 9618, 1623, 2688, 6859, 9862, 
1054, 5327, 8478, 7862, 6387, 9938, 9763, 6581, 5532, 2614, 3978, 6885, 7538, 7646, 768, 
2970, 2331, 7501, 2392, 6703, 3078, 4273, 3083, 3623, 534, 9059, 1390, 7702, 8451, 5356, 
20, 3314, 4477, 11, 3923, 436, 5474, 5652, 1323, 9683, 5682, 2618, 3956, 1203, 1122, 5376, 
2759, 5562, 1886, 1437, 1600, 1731, 3570, 9470, 3410, 8775, 7786, 2929, 2572, 1256, 872, 
335, 6219, 9888, 3958, 7481, 8752, 2698, 5196, 2518, 9635, 1278, 2405, 6139, 296, 5251, 
766, 8109, 9121, 304, 9822, 8051, 8228, 899, 3516, 687, 8063, 1030, 2413, 5391, 6441, 7967, 
621, 7839, 1930, 7288, 9040, 65, 1405, 5374, 2185, 527, 6309, 3661, 5931, 1296, 6207, 363, 
8959, 2106, 7559, 5044, 4629, 5608, 141, 3271, 3918, 348, 6264, 3678, 1048, 1349, 6475, 
7283, 939, 4644, 6088, 2433, 7157, 7500, 1939, 5866, 4577, 9001, 8185, 1112, 8222, 9778, 
5440, 5173, 4156, 6353, 2703, 1310, 4377, 2547, 1282, 741, 7278, 3595, 1399, 1990, 4372, 
348, 6701, 9789, 1035, 3015, 9022, 6998, 2555, 5857, 8185, 3332, 9244, 9977, 3493, 8822, 
9748, 6217, 7827, 6679, 1855, 1930, 8884, 7078, 5028, 9181, 603, 806, 7605, 7671, 6547, 
6614, 6487, 6572, 7220, 8899, 4387, 9008, 3522, 796, 7371, 2457, 5751, 5302, 1793, 4825, 
4627, 9505, 9941, 2652, 977, 4715, 7982, 2637, 4587, 2308, 7660, 461, 1440, 5490, 4875, 
9766, 1717, 1254, 8313, 7148, 1450, 862, 7675, 9702, 9311, 1164, 1629, 5420, 1862, 4903, 
2106, 401, 1978, 6784, 9515, 227, 8577, 1944, 5507, 3296, 7998, 8944, 8474, 1516, 6602, 
721, 567, 9168, 6612, 526, 4196, 5541, 5046, 1990, 1853, 434, 7498, 3582, 7705, 8577, 1517, 
2559, 493, 1816, 9027, 6267, 5373, 5799, 2091, 1094, 596, 5294, 1460, 7074, 3253, 2113, 
7744, 5260, 4899, 5118, 2328, 1030, 5294, 8158, 816, 6964, 9375, 3099, 4429, 6586, 32742, 
8011, 3477, 1975, 6590, 7171, 1507, 712, 1676, 1014, 3083, 560, 5223, 8507, 
7366, 6513, 6728, 9021, 2003, 5541, 3650, 4224, 9892, 2062, 3771, 4213, 1450, 7408, 508, 
4860, 5811, 8158, 9179, 9465, 5728, 8306, 183, 3114, 5612, 321, 8179, 4345, 8698, 3887, 
5095, 1901, 9406, 5694, 6307, 9669, 719, 1405, 789, 328, 3259, 7423, 9645, 8934, 6524, 
5928, 7487, 5028, 4313, 6975, 3401, 9366, 5440, 465, 4438, 4333, 8082, 9491, 338, 8771, 
224, 5898, 9215, 4405, 9621, 1518, 4151, 9249, 2083, 4396, 5171, 2223, 2851, 4555, 3947, 
2229, 2791, 6913, 7855, 3749, 3763, 3751, 1349, 378, 8971, 2026, 7892, 1267, 254, 1332, 
1473, 9135, 7940, 554, 3896, 5274, 1827, 727, 1613, 7431, 9112, 8122, 5235, 2782, 389, 331, 
2557, 1255, 8038, 3507, 3139, 1864, 3672, 5372, 6088, 876, 1531, 1095, 8889, 8149, 8695, 
941, 6184, 6611, 4366, 1880, 4186, 325, 4001, 355, 5165, 223, 901, 719, 3694, 4829, 8983, 
8071, 8171, 7815, 7822, 6150, 6372, 165, 3248, 7944, 7495, 37, 3336, 1374, 1741, 7467, 
5830, 2630, 799, 856, 871, 7803, 8332, 1934, 3814, 8344, 6399, 6578, 4323, 1459, 6461, 
7747, 5907, 7543, 4140, 2811, 3785, 6418, 2091, 1539, 3092, 4017, 3341, 8284, 6216, 9401, 
9495, 2731, 2081, 9928, 2925, 5093, 9366, 778, 4392, 5196, 3098, 9088, 6491, 4552, 7865, 
6910, 6486, 1945, 6433, 3268, 634, 2859, 8110, 3184, 3565, 1595, 9035, 2593, 9281, 2378, 
4245, 79, 9473, 1248, 3730, 7273, 3595, 8259, 9539, 6095, 3620, 6231, 3382, 8962, 40, 2376, 
5023, 2008, 2689, 8854, 1687, 3444, 4011, 3680, 3525, 918, 2805, 2501, 8301, 191, 554, 
6486, 3110, 5607, 2193, 5808, 7825, 9395, 657, 1161, 7158, 177, 6009, 489, 3121, 3557, 
8463, 5691, 9837, 1753, 9960, 8163, 799, 5489, 4680, 8402, 8839, 2461, 3322, 1912, 7811, 
8706, 289, 4953, 740, 6555, 2448, 2996, 7268, 9164, 8151, 6480, 1304, 3976, 8591, 3367, 
7699, 7683, 1065, 2008, 2428, 3978, 225, 3351, 5985, 6033, 3705, 4792, 7867, 5181, 4595, 
1276, 1411, 7556, 1198, 3995, 6678, 786, 6533, 3187, 4661, 1438, 1397, 9839, 1600, 9580, 
8830, 2364, 6661, 7059, 5035, 9016, 8995, 7649, 1381, 6155, 2995, 8158, 1733, 3563, 6041, 
7583, 377, 5834, 9880, 2604, 2185, 7235, 5476, 1764, 1178, 5014, 5068, 3055, 6370, 8735, 
983, 3605, 1229, 4925, 2013, 4925, 7152, 3506, 5210, 3496, 60, 2103, 671, 4159, 2838, 1762, 
6570, 5465, 3156, 6314, 8151, 6162, 3434, 2938, 535, 4089, 2917, 5364, 2175, 4537, 9704, 
8072, 164, 9339, 6262, 7829, 7158, 8201, 2079, 7983, 3898, 6149, 1630, 7746, 5853, 8315, 
7906, 2150, 437, 2997, 1388, 4467, 6394, 2526, 5784, 9543, 261, 4121, 4256, 7686, 7672, 
8387, 2077, 7393, 5935, 9062, 3135, 3338, 7957, 5791, 4063, 1286, 122, 4770, 8499, 5124, 
4003, 8588, 2946, 1054, 7474, 4410, 7800, 1374, 3400, 9672, 7964, 1827, 9144, 2124, 6433, 
915, 9102, 8021, 7594, 3651, 1168, 6190, 5329, 277, 4436, 7511, 777, 5201, 2258, 9654, 738, 
5607, 3051, 4921, 1854, 515, 8058, 9535, 1090, 8066, 426, 328, 8286, 3045, 4984, 123, 2193, 
548, 9242, 7143, 7174, 1205, 976, 9739, 2292, 2957, 3546, 697, 6709, 3381, 7531, 1160, 996, 
3280, 5084, 938, 3645, 9981, 340, 8270, 1456, 2136, 2886, 8135, 2950, 2790, 6124, 4044, 
247, 337, 5027, 7601, 2395, 6288, 9318, 3253, 2207, 9482, 4703, 9134, 4235, 6892, 5404, 
9714, 5122, 1562, 4655, 2247, 9689, 5235, 1320, 1646, 3371, 4968, 3126, 1483, 7740, 829, 
4220, 9880, 3581, 2289, 321, 5995, 9951, 2539, 3467, 6949, 7532, 6214, 5948, 7516, 3618, 
4206, 6957, 4107, 4929, 3819, 7706, 6440, 6472, 5005, 8543, 5223, 1739, 665, 5954, 5213, 
1863, 1572, 8704, 3688, 1145, 9436, 5916, 5373, 6124, 1007, 8469, 33, 6689, 6070, 552, 
5292, 1940, 5666, 8278, 5963, 6508, 8283, 7112, 2021, 2835, 5429, 7327, 161, 5735, 2659, 
7568, 614, 1345, 6832, 7857, 2658, 6164, 4140, 2301, 5231, 7848, 7379, 5454, 5619, 6839, 
7461, 412, 3895, 6935, 1793, 1536, 6970, 218, 371, 8206, 9479, 1042, 1744, 6307, 8756, 
6041, 2640, 3867, 956, 7328, 3067, 4966, 8512, 7830, 8711, 4123, 7049, 8875, 4753, 3326, 
4113, 9414, 9817, 5422, 5667, 1460, 7747, 9442, 9952, 4082, 7595, 486, 8516, 7405, 9369, 
2960, 5064, 9303, 5013, 7672, 3193}; 
    k = 4371; 
    std::cout << minimumAmplitude(nums, k) << std::endl;
}

int main() {
    std::string pathOutput = "output.txt";
    std::ofstream out(pathOutput);

    std::streambuf *coutbuf = std::cout.rdbuf();
    std::cout.rdbuf(out.rdbuf());
    
    std::cout << "Test ArrayList" << std::endl;
    test_buyCar();
    std::cout << std::endl;

    std::cout << "Test sumLessThanTarget" << std::endl;
    test_sumLessThanTarget();
    std::cout << std::endl;

    std::cout << "Test minimumAmplitude" << std::endl;
    test_minimumAmplitude();
    std::cout << std::endl;
    
    std::cout.rdbuf(coutbuf);
    return 0;
}